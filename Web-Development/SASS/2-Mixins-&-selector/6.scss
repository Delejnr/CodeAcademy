/*
Sass allows you to pass in multiple arguments in a list or a map format.

For example, take the multiple properties needed to create the college-ruled stripes in the back of our notecard.

@mixin stripes($direction, $width-percent, $stripe-color, $stripe-background: #FFF) {
  background: repeating-linear-gradient(
    $direction,
    $stripe-background,
    $stripe-background ($width-percent - 1),
    $stripe-color 1%,
    $stripe-background $width-percent
  );
}
In this scenario, it makes sense to create a map with these properties in case we ever want to update or reference them.

$college-ruled-style: (
    direction: to bottom,
    width-percent: 15%,
    stripe-color: blue,
    stripe-background: white
);
When we include our mixin, we can then pass in these arguments in a map with the following ... notation:

.definition {
      width: 100%;
      height: 100%;
      @include stripes($college-ruled-style...);
 }
Note: Remember to always prioritize readability over writing less code. This approach is only useful if you find it adds clarity to your codebase.
1.
At the top of main.scss, make a new list variable:

$stripe-properties: to bottom, 15%, blue, white;
Include the stripes mixin inside of the .definition selector:

.definition {
    @include stripes($stripe-properties...);
  }
Click "Run" to see your changes in the browser and inspect them in the output of main.css.

 */

$stripe-properties: to bottom, 15%, blue, white;
@mixin stripes($direction, $width-percent, $stripe-color, $stripe-background: #FFF) {
  background: repeating-linear-gradient(
                  $direction,
                  $stripe-background,
                  $stripe-background ($width-percent - 1),
                  $stripe-color 1%,
                  $stripe-background $width-percent
  );
}

@mixin transform($transformation) {
  transform: $transformation;
  -webkit-transform: $transformation;
  -moz-transform: $transformation;
  -ms-transform: $transformation;
  -o-transform: $transformation;
}

@mixin photo-content {
  object-fit: cover;
}

//Add your own mixins here
@mixin backface-visibility($visibility: hidden) { //Add an argument
  backface-visibility: $visibility;
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  -ms-backface-visibility: $visibility;
  -o-backface-visibility: $visibility;
}

@mixin transform-style($style){
  transform-style: $style;
  -moz-transform-style: $style;
  -o-transform-style: $style;
  -ms-transform-style: $style;
  -webkit-transform-style: $style;
}

@mixin transition($time){
  transition: $time;
  -webkit-transition: $time;
  -moz-transition: $time;
  -o-transition: $time;
}

.notecard {
  width: 300px;
  height: 180px;
  border: 1px solid black;
  display: inline-block;
  margin: 20px;
  font-family: Roboto, sans-serif;
  box-shadow: 1px 1px 2px 2px rgba(0,0,0,.2);
  @include transform-style(preserve-3d);
  @include transition(0.4s);

  &:hover{
    @include transform (rotatey(-180deg));

  }

  .front, .back {
    width: 100%;
    height: 100%;
    position: absolute;
    @include backface-visibility;
  }

  .front {
    z-index: 3;
    font-size: 20px;

    .word {
      display: block;
      text-align: center;
      position: relative;
      top: 40%;
    }
  }


  .back {
    z-index: 1;
    word-wrap: break-word;
    line-height: 1.6;
    @include transform(rotatey(-180deg));
    .definition {
      width: 100%;
      height: 100%;

      .photo {
        width: 60%;
        margin: 0px auto;

      }
    }
  }
}

.definition {
  @include stripes($stripe-properties...);
}
